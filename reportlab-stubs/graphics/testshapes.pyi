import unittest
from typing import Any

from reportlab.graphics.shapes import *
from reportlab.graphics.widgets.signsandsymbols import SmileyFace as SmileyFace
from reportlab.lib import colors as colors
from reportlab.lib.units import cm as cm
from reportlab.lib.utils import asNative as asNative
from reportlab.lib.utils import base64_decodebytes as base64_decodebytes
from reportlab.pdfbase.pdfmetrics import stringWidth as stringWidth
from reportlab.pdfgen.canvas import Canvas as Canvas
from reportlab.rl_config import register_reset as register_reset

__version__: str
__doc__: str
_FONTS: Any

def _setup(): ...
def resetFonts() -> None: ...
def getFailedDrawing(funcName): ...
def getDrawing01(): ...
def getDrawing02(): ...
def getDrawing03(): ...
def getDrawing04(): ...
def getDrawing05(): ...
def getDrawing06(): ...
def getDrawing07(): ...
def getDrawing08(): ...
def getDrawing09(): ...
def getDrawing10(): ...
def getDrawing11(): ...
def getDrawing12(): ...
def getDrawing13(): ...
def smallArrow(): ...
def getDrawing14(): ...
def getAllFunctionDrawingNames(doTTF: int = ...): ...
def _evalFuncDrawing(name, D, l: Any | None = ..., g: Any | None = ...) -> None: ...
def getAllTestDrawings(doTTF: int = ...): ...
def writePDF(drawings) -> None: ...

class ShapesTestCase(unittest.TestCase):
    funcNames: Any
    drawings: Any
    def setUp(self) -> None: ...
    def tearDown(self) -> None: ...
    def testAllDrawings(self) -> None: ...

def makeSuite(): ...
