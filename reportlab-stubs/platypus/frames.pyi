from typing import Any

class ShowBoundaryValue:
    color: Any
    width: Any
    dashArray: Any
    def __init__(
        self, color=..., width: float = ..., dashArray: Any | None = ...
    ) -> None: ...
    def __bool__(self): ...

class Frame:
    id: Any
    _debug: Any
    showBoundary: Any
    _oASpace: Any
    def __init__(
        self,
        x1,
        y1,
        width,
        height,
        leftPadding: int = ...,
        bottomPadding: int = ...,
        rightPadding: int = ...,
        topPadding: int = ...,
        id: Any | None = ...,
        showBoundary: int = ...,
        overlapAttachedSpace: Any | None = ...,
        _debug: Any | None = ...,
    ) -> None: ...
    def __getattr__(self, a): ...
    def __setattr__(self, a, v) -> None: ...
    def _saveGeom(self, **kwds) -> None: ...
    def _restoreGeom(self) -> None: ...
    _x2: Any
    _y2: Any
    _y1p: Any
    _aW: Any
    _aH: Any
    def _geom(self) -> None: ...
    _x: Any
    _y: Any
    _atTop: int
    _prevASpace: int
    _leftExtraIndent: float
    _rightExtraIndent: float
    def _reset(self) -> None: ...
    def _getAvailableWidth(self): ...
    def _add(self, flowable, canv, trySplit: int = ...): ...
    add: Any
    def split(self, flowable, canv): ...
    @staticmethod
    def _drawBoundary(canv, sb, x1, y1, width, height) -> None: ...
    def drawBoundary(self, canv, __boundary__: Any | None = ...) -> None: ...
    def addFromList(self, drawlist, canv) -> None: ...
    def add_generated_content(self, *C) -> None: ...
    def _aSpaceString(self): ...
