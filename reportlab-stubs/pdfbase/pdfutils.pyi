from typing import Any

from reportlab import rl_config as rl_config
from reportlab.lib.rl_accel import asciiBase85Decode as asciiBase85Decode
from reportlab.lib.rl_accel import asciiBase85Encode as asciiBase85Encode
from reportlab.lib.utils import ImageReader as ImageReader
from reportlab.lib.utils import isUnicode as isUnicode

__version__: str
__doc__: str

def _chunker(src, dst=..., chunkSize: int = ...): ...

_mode2cs: Any
_mode2bpp: Any

def makeA85Image(filename, IMG: Any | None = ..., detectJpeg: bool = ...): ...
def makeRawImage(filename, IMG: Any | None = ..., detectJpeg: bool = ...): ...
def cacheImageFile(filename, returnInMemory: int = ..., IMG: Any | None = ...): ...
def preProcessImages(spec) -> None: ...
def cachedImageExists(filename): ...
def _normalizeLineEnds(text, desired: str = ..., unlikely: str = ...): ...
def _AsciiHexEncode(input): ...
def _AsciiHexDecode(input): ...
def _wrap(input, columns: int = ...): ...
def readJPEGInfo(image): ...

class _fusc:
    _k: Any
    _klen: Any
    _n: Any
    def __init__(self, k, n) -> None: ...
    def encrypt(self, s): ...
    def decrypt(self, s): ...
    def __rotate(self, s, n): ...
    def __fusc(self, s): ...
